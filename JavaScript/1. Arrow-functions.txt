Las Arrow functions son exactamente lo mismo que las functions pero mejoradas, mejoradas porque son mas resumidas y practicas.
RESUMEN: Basicamente cuando veas un "=>" es una funcion.

----------------ANTES----------------

function add(a, b) {
  return a + b;
}

add(1, 2); // 3

 

----------------AHORA----------------

const add = (a, b) => {
  return a + b;
};

add(1, 2); // 3


RESUMEN: Basicamente cuando veas un "=>" es una funcion.
-------


--------------Ejemplo 1-----------------


function isButtonDisabled(key) {
    return disabledButtons.includes(key);
  }

--------------Ejemplo 2-----------------


  function assignClass(key) {
    if (isButtonDisabled(key)) {
      return "disabled";
    } else {
      return;
    }
  }


--------------Ejemplo 2-----------------

  function disableKeys(myArray, guessarray) {
    myArray.forEach((item, index) => {
      if (item === 0) {
        // setDisabledButtons(disabledButtons.push(guessarray[index]));
        setDisabledButtons((prevButtons) => [...prevButtons, guessarray[index].toUpperCase()]);
      }
      //runToast(disabledButtons);
    });
  }

  ---------TO-DO LIST---------

  Buscar ejemplos reales para entender los callbacks.


  function getPost (){
    const post = await sql`

    const person = [
      {name:"rodrigo",
      age: 32},
      {}
    ]
    console.log (person[]);
  }